package com.hanium.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hanium.domain.ControlledItemsVO;
import com.hanium.domain.VulnerabilityVO;
import com.hanium.service.ControlledItemsService;
import com.hanium.service.VulnerabilityService;

import lombok.AllArgsConstructor;
import lombok.extern.log4j.Log4j;

@Controller
@Log4j
@RequestMapping("/vulnerability/*")
@AllArgsConstructor
public class VulnerabilityController {

	private VulnerabilityService service;
	private ControlledItemsService service_ci;

	@GetMapping("/vul_list")
	public void new_vul_list(Model model) { // addAttribute메소드를 이용해 Model객체에 담아서 전달
		log.info("[CONTROLLER]get list...");
		model.addAttribute("list",service.getList());
	}

	@GetMapping("/vul_detail")
	public void new_vul_detail() {
	}

	@GetMapping("/vul_register")
	public void new_vul_register(Model model) {
		model.addAttribute("ci_list",service_ci.get("1"));
	}
	
	
	@GetMapping(value = "/select_ci_number")
	public @ResponseBody List<ControlledItemsVO> search_keyword(@RequestParam("number") String number) {
		log.info(number);
		List<ControlledItemsVO> ci_list = service_ci.getCIDetailList(number);
		
		ci_list.forEach(i -> log.info(i));
		return ci_list;
	}
	
	@PostMapping("/register") // 글을 등록하는 경우에는 get방식이 아니라 post방식을 사용한다.
	public String register(VulnerabilityVO vul) { // RedirectAttributes :
		log.info("[CONTROLLER]register : " + vul);
		service.register(vul);
		// rttr.addFlashAttribute("result",dept.getDeptcode());
		// return "redirect:/dept/list";
		return "success";
	}

	@GetMapping("/get")
	public void get(@RequestParam("Vul_id") String Vul_id, Model model) {
		model.addAttribute("Vul", service.get(Vul_id));
	}

	@PostMapping("/modify")
	public String modify(VulnerabilityVO vul) {
		log.info("[ CONTROLLER ] modify:" + vul);
		service.modify(vul);
		return "success";
	}

}
